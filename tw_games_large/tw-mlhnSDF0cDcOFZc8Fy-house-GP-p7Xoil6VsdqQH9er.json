{"world": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_0", "type": "c"}, {"name": "r_0", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_1", "type": "c"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_2", "type": "c"}, {"name": "r_1", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_3", "type": "c"}, {"name": "r_12", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_4", "type": "c"}, {"name": "r_9", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_5", "type": "c"}, {"name": "r_17", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_6", "type": "c"}, {"name": "r_6", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_7", "type": "c"}, {"name": "r_11", "type": "r"}]}, {"name": "at", "arguments": [{"name": "f_0", "type": "f"}, {"name": "r_0", "type": "r"}]}, {"name": "at", "arguments": [{"name": "f_5", "type": "f"}, {"name": "r_18", "type": "r"}]}, {"name": "at", "arguments": [{"name": "f_6", "type": "f"}, {"name": "r_15", "type": "r"}]}, {"name": "at", "arguments": [{"name": "k_3", "type": "k"}, {"name": "r_0", "type": "r"}]}, {"name": "at", "arguments": [{"name": "k_8", "type": "k"}, {"name": "r_17", "type": "r"}]}, {"name": "at", "arguments": [{"name": "k_9", "type": "k"}, {"name": "r_11", "type": "r"}]}, {"name": "at", "arguments": [{"name": "o_1", "type": "o"}, {"name": "r_14", "type": "r"}]}, {"name": "at", "arguments": [{"name": "o_2", "type": "o"}, {"name": "r_4", "type": "r"}]}, {"name": "at", "arguments": [{"name": "o_4", "type": "o"}, {"name": "r_5", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_0", "type": "s"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_1", "type": "s"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_2", "type": "s"}, {"name": "r_18", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_3", "type": "s"}, {"name": "r_17", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_4", "type": "s"}, {"name": "r_4", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_5", "type": "s"}, {"name": "r_4", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_6", "type": "s"}, {"name": "r_13", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_7", "type": "s"}, {"name": "r_13", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_8", "type": "s"}, {"name": "r_16", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_9", "type": "s"}, {"name": "r_2", "type": "r"}]}, {"name": "closed", "arguments": [{"name": "c_0", "type": "c"}]}, {"name": "closed", "arguments": [{"name": "c_7", "type": "c"}]}, {"name": "east_of", "arguments": [{"name": "r_0", "type": "r"}, {"name": "r_8", "type": "r"}]}, {"name": "east_of", "arguments": [{"name": "r_1", "type": "r"}, {"name": "r_0", "type": "r"}]}, {"name": "east_of", "arguments": [{"name": "r_10", "type": "r"}, {"name": "r_14", "type": "r"}]}, {"name": "east_of", "arguments": [{"name": "r_12", "type": "r"}, {"name": "r_9", "type": "r"}]}, {"name": "east_of", "arguments": [{"name": "r_18", "type": "r"}, {"name": "r_17", "type": "r"}]}, {"name": "east_of", "arguments": [{"name": "r_4", "type": "r"}, {"name": "r_7", "type": "r"}]}, {"name": "east_of", "arguments": [{"name": "r_5", "type": "r"}, {"name": "r_6", "type": "r"}]}, {"name": "east_of", "arguments": [{"name": "r_8", "type": "r"}, {"name": "r_10", "type": "r"}]}, {"name": "east_of", "arguments": [{"name": "r_9", "type": "r"}, {"name": "r_13", "type": "r"}]}, {"name": "edible", "arguments": [{"name": "f_0", "type": "f"}]}, {"name": "edible", "arguments": [{"name": "f_1", "type": "f"}]}, {"name": "edible", "arguments": [{"name": "f_2", "type": "f"}]}, {"name": "edible", "arguments": [{"name": "f_3", "type": "f"}]}, {"name": "edible", "arguments": [{"name": "f_4", "type": "f"}]}, {"name": "edible", "arguments": [{"name": "f_5", "type": "f"}]}, {"name": "edible", "arguments": [{"name": "f_6", "type": "f"}]}, {"name": "free", "arguments": [{"name": "r_1", "type": "r"}, {"name": "r_2", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_10", "type": "r"}, {"name": "r_11", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_10", "type": "r"}, {"name": "r_13", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_11", "type": "r"}, {"name": "r_10", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_12", "type": "r"}, {"name": "r_9", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_13", "type": "r"}, {"name": "r_10", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_13", "type": "r"}, {"name": "r_9", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_14", "type": "r"}, {"name": "r_16", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_15", "type": "r"}, {"name": "r_17", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_16", "type": "r"}, {"name": "r_14", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_17", "type": "r"}, {"name": "r_15", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_18", "type": "r"}, {"name": "r_19", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_19", "type": "r"}, {"name": "r_18", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_2", "type": "r"}, {"name": "r_1", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_4", "type": "r"}, {"name": "r_5", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_4", "type": "r"}, {"name": "r_7", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_5", "type": "r"}, {"name": "r_4", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_5", "type": "r"}, {"name": "r_6", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_6", "type": "r"}, {"name": "r_5", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_6", "type": "r"}, {"name": "r_7", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_7", "type": "r"}, {"name": "r_4", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_7", "type": "r"}, {"name": "r_6", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_9", "type": "r"}, {"name": "r_12", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_9", "type": "r"}, {"name": "r_13", "type": "r"}]}, {"name": "in", "arguments": [{"name": "f_1", "type": "f"}, {"name": "c_0", "type": "c"}]}, {"name": "in", "arguments": [{"name": "f_2", "type": "f"}, {"name": "I", "type": "I"}]}, {"name": "in", "arguments": [{"name": "f_3", "type": "f"}, {"name": "I", "type": "I"}]}, {"name": "in", "arguments": [{"name": "f_4", "type": "f"}, {"name": "I", "type": "I"}]}, {"name": "in", "arguments": [{"name": "k_0", "type": "k"}, {"name": "c_1", "type": "c"}]}, {"name": "in", "arguments": [{"name": "k_5", "type": "k"}, {"name": "I", "type": "I"}]}, {"name": "in", "arguments": [{"name": "o_0", "type": "o"}, {"name": "I", "type": "I"}]}, {"name": "in", "arguments": [{"name": "o_3", "type": "o"}, {"name": "I", "type": "I"}]}, {"name": "in", "arguments": [{"name": "o_5", "type": "o"}, {"name": "I", "type": "I"}]}, {"name": "in", "arguments": [{"name": "o_6", "type": "o"}, {"name": "I", "type": "I"}]}, {"name": "in", "arguments": [{"name": "o_7", "type": "o"}, {"name": "I", "type": "I"}]}, {"name": "link", "arguments": [{"name": "r_0", "type": "r"}, {"name": "d_1", "type": "d"}, {"name": "r_1", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_0", "type": "r"}, {"name": "d_9", "type": "d"}, {"name": "r_8", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_1", "type": "r"}, {"name": "d_0", "type": "d"}, {"name": "r_3", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_1", "type": "r"}, {"name": "d_1", "type": "d"}, {"name": "r_0", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_10", "type": "r"}, {"name": "d_4", "type": "d"}, {"name": "r_14", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_10", "type": "r"}, {"name": "d_5", "type": "d"}, {"name": "r_8", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_14", "type": "r"}, {"name": "d_4", "type": "d"}, {"name": "r_10", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_14", "type": "r"}, {"name": "d_8", "type": "d"}, {"name": "r_15", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_15", "type": "r"}, {"name": "d_7", "type": "d"}, {"name": "r_17", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_15", "type": "r"}, {"name": "d_8", "type": "d"}, {"name": "r_14", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_17", "type": "r"}, {"name": "d_6", "type": "d"}, {"name": "r_18", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_17", "type": "r"}, {"name": "d_7", "type": "d"}, {"name": "r_15", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_18", "type": "r"}, {"name": "d_6", "type": "d"}, {"name": "r_17", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_3", "type": "r"}, {"name": "d_0", "type": "d"}, {"name": "r_1", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_3", "type": "r"}, {"name": "d_2", "type": "d"}, {"name": "r_4", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_4", "type": "r"}, {"name": "d_2", "type": "d"}, {"name": "r_3", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_8", "type": "r"}, {"name": "d_3", "type": "d"}, {"name": "r_9", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_8", "type": "r"}, {"name": "d_5", "type": "d"}, {"name": "r_10", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_8", "type": "r"}, {"name": "d_9", "type": "d"}, {"name": "r_0", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_9", "type": "r"}, {"name": "d_3", "type": "d"}, {"name": "r_8", "type": "r"}]}, {"name": "locked", "arguments": [{"name": "c_1", "type": "c"}]}, {"name": "locked", "arguments": [{"name": "c_2", "type": "c"}]}, {"name": "locked", "arguments": [{"name": "c_4", "type": "c"}]}, {"name": "locked", "arguments": [{"name": "c_5", "type": "c"}]}, {"name": "locked", "arguments": [{"name": "c_6", "type": "c"}]}, {"name": "locked", "arguments": [{"name": "d_0", "type": "d"}]}, {"name": "locked", "arguments": [{"name": "d_1", "type": "d"}]}, {"name": "locked", "arguments": [{"name": "d_2", "type": "d"}]}, {"name": "locked", "arguments": [{"name": "d_3", "type": "d"}]}, {"name": "locked", "arguments": [{"name": "d_4", "type": "d"}]}, {"name": "locked", "arguments": [{"name": "d_5", "type": "d"}]}, {"name": "locked", "arguments": [{"name": "d_6", "type": "d"}]}, {"name": "locked", "arguments": [{"name": "d_8", "type": "d"}]}, {"name": "locked", "arguments": [{"name": "d_9", "type": "d"}]}, {"name": "match", "arguments": [{"name": "k_1", "type": "k"}, {"name": "d_9", "type": "d"}]}, {"name": "match", "arguments": [{"name": "k_2", "type": "k"}, {"name": "c_1", "type": "c"}]}, {"name": "match", "arguments": [{"name": "k_3", "type": "k"}, {"name": "c_0", "type": "c"}]}, {"name": "match", "arguments": [{"name": "k_5", "type": "k"}, {"name": "c_4", "type": "c"}]}, {"name": "match", "arguments": [{"name": "k_8", "type": "k"}, {"name": "c_5", "type": "c"}]}, {"name": "match", "arguments": [{"name": "k_9", "type": "k"}, {"name": "c_7", "type": "c"}]}, {"name": "north_of", "arguments": [{"name": "r_1", "type": "r"}, {"name": "r_2", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_10", "type": "r"}, {"name": "r_13", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_11", "type": "r"}, {"name": "r_10", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_14", "type": "r"}, {"name": "r_16", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_15", "type": "r"}, {"name": "r_14", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_17", "type": "r"}, {"name": "r_15", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_19", "type": "r"}, {"name": "r_18", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_3", "type": "r"}, {"name": "r_1", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_4", "type": "r"}, {"name": "r_3", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_5", "type": "r"}, {"name": "r_4", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_6", "type": "r"}, {"name": "r_7", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_8", "type": "r"}, {"name": "r_9", "type": "r"}]}, {"name": "on", "arguments": [{"name": "k_1", "type": "k"}, {"name": "s_0", "type": "s"}]}, {"name": "on", "arguments": [{"name": "k_2", "type": "k"}, {"name": "s_1", "type": "s"}]}, {"name": "open", "arguments": [{"name": "c_3", "type": "c"}]}, {"name": "open", "arguments": [{"name": "d_7", "type": "d"}]}, {"name": "south_of", "arguments": [{"name": "r_1", "type": "r"}, {"name": "r_3", "type": "r"}]}, {"name": "south_of", "arguments": [{"name": "r_10", "type": "r"}, {"name": "r_11", "type": "r"}]}, {"name": "south_of", "arguments": [{"name": "r_13", "type": "r"}, {"name": "r_10", "type": "r"}]}, {"name": "south_of", "arguments": [{"name": "r_14", "type": "r"}, {"name": "r_15", "type": "r"}]}, {"name": "south_of", "arguments": [{"name": "r_15", "type": "r"}, {"name": "r_17", "type": "r"}]}, {"name": "south_of", "arguments": [{"name": "r_16", "type": "r"}, {"name": "r_14", "type": "r"}]}, {"name": "south_of", "arguments": [{"name": "r_18", "type": "r"}, {"name": "r_19", "type": "r"}]}, {"name": "south_of", "arguments": [{"name": "r_2", "type": "r"}, {"name": "r_1", "type": "r"}]}, {"name": "south_of", "arguments": [{"name": "r_3", "type": "r"}, {"name": "r_4", "type": "r"}]}, {"name": "south_of", "arguments": [{"name": "r_4", "type": "r"}, {"name": "r_5", "type": "r"}]}, {"name": "south_of", "arguments": [{"name": "r_7", "type": "r"}, {"name": "r_6", "type": "r"}]}, {"name": "south_of", "arguments": [{"name": "r_9", "type": "r"}, {"name": "r_8", "type": "r"}]}, {"name": "west_of", "arguments": [{"name": "r_0", "type": "r"}, {"name": "r_1", "type": "r"}]}, {"name": "west_of", "arguments": [{"name": "r_10", "type": "r"}, {"name": "r_8", "type": "r"}]}, {"name": "west_of", "arguments": [{"name": "r_13", "type": "r"}, {"name": "r_9", "type": "r"}]}, {"name": "west_of", "arguments": [{"name": "r_14", "type": "r"}, {"name": "r_10", "type": "r"}]}, {"name": "west_of", "arguments": [{"name": "r_17", "type": "r"}, {"name": "r_18", "type": "r"}]}, {"name": "west_of", "arguments": [{"name": "r_6", "type": "r"}, {"name": "r_5", "type": "r"}]}, {"name": "west_of", "arguments": [{"name": "r_7", "type": "r"}, {"name": "r_4", "type": "r"}]}, {"name": "west_of", "arguments": [{"name": "r_8", "type": "r"}, {"name": "r_0", "type": "r"}]}, {"name": "west_of", "arguments": [{"name": "r_9", "type": "r"}, {"name": "r_12", "type": "r"}]}], "grammar": {"theme": "house", "names_to_exclude": [], "include_adj": false, "blend_descriptions": false, "ambiguous_instructions": false, "only_last_action": false, "blend_instructions": false, "allowed_variables_numbering": false, "unique_expansion": false}, "quests": [{"desc": "Welcome to another exciting game of TextWorld! First off, if it's not too much trouble, I need you to recover the Canadian passkey from the bowl. After that, check that the Canadian locker in the cookery is unlocked with the Canadian passkey. Then, open the Canadian locker. And then, retrieve the key from the Canadian locker. Once that's all handled, you can stop!", "reward": 1, "commands": ["take Canadian passkey from bowl", "unlock Canadian locker with Canadian passkey", "open Canadian locker", "take key from Canadian locker"], "win_events": [{"commands": ["take Canadian passkey from bowl", "unlock Canadian locker with Canadian passkey", "open Canadian locker", "take key from Canadian locker"], "actions": [{"name": "take/s-P-r-s-k-I", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_1", "type": "s"}, {"name": "r_8", "type": "r"}]}, {"name": "on", "arguments": [{"name": "k_2", "type": "k"}, {"name": "s_1", "type": "s"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_1", "type": "s"}, {"name": "r_8", "type": "r"}]}, {"name": "in", "arguments": [{"name": "k_2", "type": "k"}, {"name": "I", "type": "I"}]}]}, {"name": "unlock/c", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_1", "type": "c"}, {"name": "r_8", "type": "r"}]}, {"name": "in", "arguments": [{"name": "k_2", "type": "k"}, {"name": "I", "type": "I"}]}, {"name": "match", "arguments": [{"name": "k_2", "type": "k"}, {"name": "c_1", "type": "c"}]}, {"name": "locked", "arguments": [{"name": "c_1", "type": "c"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_1", "type": "c"}, {"name": "r_8", "type": "r"}]}, {"name": "in", "arguments": [{"name": "k_2", "type": "k"}, {"name": "I", "type": "I"}]}, {"name": "match", "arguments": [{"name": "k_2", "type": "k"}, {"name": "c_1", "type": "c"}]}, {"name": "closed", "arguments": [{"name": "c_1", "type": "c"}]}]}, {"name": "open/c", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_1", "type": "c"}, {"name": "r_8", "type": "r"}]}, {"name": "closed", "arguments": [{"name": "c_1", "type": "c"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_1", "type": "c"}, {"name": "r_8", "type": "r"}]}, {"name": "open", "arguments": [{"name": "c_1", "type": "c"}]}]}, {"name": "take/c-P-r-c-k-I", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_1", "type": "c"}, {"name": "r_8", "type": "r"}]}, {"name": "open", "arguments": [{"name": "c_1", "type": "c"}]}, {"name": "in", "arguments": [{"name": "k_0", "type": "k"}, {"name": "c_1", "type": "c"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_1", "type": "c"}, {"name": "r_8", "type": "r"}]}, {"name": "open", "arguments": [{"name": "c_1", "type": "c"}]}, {"name": "in", "arguments": [{"name": "k_0", "type": "k"}, {"name": "I", "type": "I"}]}]}], "condition": {"name": "trigger", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_1", "type": "c"}, {"name": "r_8", "type": "r"}]}, {"name": "open", "arguments": [{"name": "c_1", "type": "c"}]}, {"name": "in", "arguments": [{"name": "k_0", "type": "k"}, {"name": "I", "type": "I"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_1", "type": "c"}, {"name": "r_8", "type": "r"}]}, {"name": "open", "arguments": [{"name": "c_1", "type": "c"}]}, {"name": "in", "arguments": [{"name": "k_0", "type": "k"}, {"name": "I", "type": "I"}]}, {"name": "event", "arguments": [{"name": "I", "type": "I"}, {"name": "P", "type": "P"}, {"name": "c_1", "type": "c"}, {"name": "k_0", "type": "k"}, {"name": "r_8", "type": "r"}]}]}}], "fail_events": []}, {"desc": "Hey, thanks for coming over to the TextWorld today, there is something I need you to do for me. First off, recover the Canadian passkey from the bowl. If you can get your hands on the Canadian passkey, look and see that the Canadian locker in the cookery is unlocked with the Canadian passkey. And then, ensure that the Canadian locker is open. Then, pick up the key from the Canadian locker. Then, take the lavender scented keycard from the chair. And then, unlock the lavender scented door. And then, ensure that the lavender scented door inside the cookery is open. And then, try to go to the east. Okay, and then, doublecheck that the chest inside the garage is wide open. Then, you can put the key inside the chest inside the garage. That's it!", "reward": 1, "commands": ["take Canadian passkey from bowl", "unlock Canadian locker with Canadian passkey", "open Canadian locker", "take key from Canadian locker", "take lavender scented keycard from chair", "unlock lavender scented door with lavender scented keycard", "open lavender scented door", "go east", "open chest", "insert key into chest"], "win_events": [{"commands": ["take Canadian passkey from bowl", "unlock Canadian locker with Canadian passkey", "open Canadian locker", "take key from Canadian locker", "take lavender scented keycard from chair", "unlock lavender scented door with lavender scented keycard", "open lavender scented door", "go east", "open chest", "insert key into chest"], "actions": [{"name": "take/s-P-r-s-k-I", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_1", "type": "s"}, {"name": "r_8", "type": "r"}]}, {"name": "on", "arguments": [{"name": "k_2", "type": "k"}, {"name": "s_1", "type": "s"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_1", "type": "s"}, {"name": "r_8", "type": "r"}]}, {"name": "in", "arguments": [{"name": "k_2", "type": "k"}, {"name": "I", "type": "I"}]}]}, {"name": "unlock/c", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_1", "type": "c"}, {"name": "r_8", "type": "r"}]}, {"name": "in", "arguments": [{"name": "k_2", "type": "k"}, {"name": "I", "type": "I"}]}, {"name": "match", "arguments": [{"name": "k_2", "type": "k"}, {"name": "c_1", "type": "c"}]}, {"name": "locked", "arguments": [{"name": "c_1", "type": "c"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_1", "type": "c"}, {"name": "r_8", "type": "r"}]}, {"name": "in", "arguments": [{"name": "k_2", "type": "k"}, {"name": "I", "type": "I"}]}, {"name": "match", "arguments": [{"name": "k_2", "type": "k"}, {"name": "c_1", "type": "c"}]}, {"name": "closed", "arguments": [{"name": "c_1", "type": "c"}]}]}, {"name": "open/c", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_1", "type": "c"}, {"name": "r_8", "type": "r"}]}, {"name": "closed", "arguments": [{"name": "c_1", "type": "c"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_1", "type": "c"}, {"name": "r_8", "type": "r"}]}, {"name": "open", "arguments": [{"name": "c_1", "type": "c"}]}]}, {"name": "take/c-P-r-c-k-I", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_1", "type": "c"}, {"name": "r_8", "type": "r"}]}, {"name": "open", "arguments": [{"name": "c_1", "type": "c"}]}, {"name": "in", "arguments": [{"name": "k_0", "type": "k"}, {"name": "c_1", "type": "c"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_1", "type": "c"}, {"name": "r_8", "type": "r"}]}, {"name": "open", "arguments": [{"name": "c_1", "type": "c"}]}, {"name": "in", "arguments": [{"name": "k_0", "type": "k"}, {"name": "I", "type": "I"}]}]}, {"name": "take/s-P-r-s-k-I", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_0", "type": "s"}, {"name": "r_8", "type": "r"}]}, {"name": "on", "arguments": [{"name": "k_1", "type": "k"}, {"name": "s_0", "type": "s"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_0", "type": "s"}, {"name": "r_8", "type": "r"}]}, {"name": "in", "arguments": [{"name": "k_1", "type": "k"}, {"name": "I", "type": "I"}]}]}, {"name": "unlock/d", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_8", "type": "r"}, {"name": "d_9", "type": "d"}, {"name": "r_0", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_0", "type": "r"}, {"name": "d_9", "type": "d"}, {"name": "r_8", "type": "r"}]}, {"name": "in", "arguments": [{"name": "k_1", "type": "k"}, {"name": "I", "type": "I"}]}, {"name": "match", "arguments": [{"name": "k_1", "type": "k"}, {"name": "d_9", "type": "d"}]}, {"name": "locked", "arguments": [{"name": "d_9", "type": "d"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_8", "type": "r"}, {"name": "d_9", "type": "d"}, {"name": "r_0", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_0", "type": "r"}, {"name": "d_9", "type": "d"}, {"name": "r_8", "type": "r"}]}, {"name": "in", "arguments": [{"name": "k_1", "type": "k"}, {"name": "I", "type": "I"}]}, {"name": "match", "arguments": [{"name": "k_1", "type": "k"}, {"name": "d_9", "type": "d"}]}, {"name": "closed", "arguments": [{"name": "d_9", "type": "d"}]}]}, {"name": "open/d", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_8", "type": "r"}, {"name": "d_9", "type": "d"}, {"name": "r_0", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_0", "type": "r"}, {"name": "d_9", "type": "d"}, {"name": "r_8", "type": "r"}]}, {"name": "closed", "arguments": [{"name": "d_9", "type": "d"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_8", "type": "r"}, {"name": "d_9", "type": "d"}, {"name": "r_0", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_0", "type": "r"}, {"name": "d_9", "type": "d"}, {"name": "r_8", "type": "r"}]}, {"name": "open", "arguments": [{"name": "d_9", "type": "d"}]}, {"name": "free", "arguments": [{"name": "r_8", "type": "r"}, {"name": "r_0", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_0", "type": "r"}, {"name": "r_8", "type": "r"}]}]}, {"name": "go/east", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "west_of", "arguments": [{"name": "r_8", "type": "r"}, {"name": "r_0", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_8", "type": "r"}, {"name": "r_0", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_0", "type": "r"}, {"name": "r_8", "type": "r"}]}], "postconditions": [{"name": "west_of", "arguments": [{"name": "r_8", "type": "r"}, {"name": "r_0", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_8", "type": "r"}, {"name": "r_0", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_0", "type": "r"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_0", "type": "r"}]}]}, {"name": "open/c", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_0", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_0", "type": "c"}, {"name": "r_0", "type": "r"}]}, {"name": "closed", "arguments": [{"name": "c_0", "type": "c"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_0", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_0", "type": "c"}, {"name": "r_0", "type": "r"}]}, {"name": "open", "arguments": [{"name": "c_0", "type": "c"}]}]}, {"name": "insert-P-r-c-k-I", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_0", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_0", "type": "c"}, {"name": "r_0", "type": "r"}]}, {"name": "open", "arguments": [{"name": "c_0", "type": "c"}]}, {"name": "in", "arguments": [{"name": "k_0", "type": "k"}, {"name": "I", "type": "I"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_0", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_0", "type": "c"}, {"name": "r_0", "type": "r"}]}, {"name": "open", "arguments": [{"name": "c_0", "type": "c"}]}, {"name": "in", "arguments": [{"name": "k_0", "type": "k"}, {"name": "c_0", "type": "c"}]}]}], "condition": {"name": "trigger", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_0", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_0", "type": "c"}, {"name": "r_0", "type": "r"}]}, {"name": "open", "arguments": [{"name": "c_0", "type": "c"}]}, {"name": "in", "arguments": [{"name": "k_0", "type": "k"}, {"name": "c_0", "type": "c"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_0", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_0", "type": "c"}, {"name": "r_0", "type": "r"}]}, {"name": "open", "arguments": [{"name": "c_0", "type": "c"}]}, {"name": "in", "arguments": [{"name": "k_0", "type": "k"}, {"name": "c_0", "type": "c"}]}, {"name": "event", "arguments": [{"name": "P", "type": "P"}, {"name": "c_0", "type": "c"}, {"name": "k_0", "type": "k"}, {"name": "r_0", "type": "r"}]}]}}], "fail_events": []}], "infos": [["P", {"id": "P", "type": "P", "name": null, "noun": null, "adj": null, "desc": null, "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["I", {"id": "I", "type": "I", "name": null, "noun": null, "adj": null, "desc": null, "room_type": null, "definite": null, "indefinite": null, "synonyms": null}], ["r_0", {"id": "r_0", "type": "r", "name": "garage", "noun": "garage", "adj": null, "desc": "You arrive in a garage. An ordinary one.\n\n Oh wow! Is that what I think it is? It is! It's a chest.[if c_0 is open and there is something in the c_0] The chest contains [a list of things in the c_0]. A chest... Is that really what you were looking for?[end if][if c_0 is open and the c_0 contains nothing] The chest is empty! This is the worst thing that could possibly happen, ever![end if]\n\n There is [if d_1 is open]an open[otherwise]a closed[end if] gateway leading east. There is [if d_9 is open]an open[otherwise]a closed[end if] lavender scented door leading west.", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["r_8", {"id": "r_8", "type": "r", "name": "cookery", "noun": "cookery", "adj": null, "desc": "You arrive in a cookery. A typical kind of place.\n\n You see [if c_1 is locked]a locked[else if c_1 is open]an open[otherwise]a closed[end if] Canadian locker in the corner.[if c_1 is open and there is something in the c_1] The Canadian locker contains [a list of things in the c_1]. Make a note of this, you might have to put stuff on or in it later on.[end if][if c_1 is open and the c_1 contains nothing] The Canadian locker is empty! What a waste of a day![end if] You can see a chair. [if there is something on the s_0]You see [a list of things on the s_0] on the chair.[end if][if there is nothing on the s_0]But oh no! there's nothing on this piece of junk. It would have been so cool if there was stuff on the chair! oh well.[end if] You can see a bowl. Make a note of this, you might have to put stuff on or in it later on. The bowl is ordinary.[if there is something on the s_1] On the bowl you can make out [a list of things on the s_1].[end if][if there is nothing on the s_1] But the thing is empty. Hm. Oh well[end if]\n\n There is [if d_9 is open]an open[otherwise]a closed[end if] lavender scented door leading east. There is [if d_3 is open]an open[otherwise]a closed[end if] balsam door leading south. There is [if d_5 is open]an open[otherwise]a closed[end if] portal leading west.", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["r_1", {"id": "r_1", "type": "r", "name": "shower", "noun": "shower", "adj": null, "desc": "You are in a shower. It seems to be pretty ordinary here.\n\n You see [if c_2 is locked]a locked[else if c_2 is open]an open[otherwise]a closed[end if] safe.[if c_2 is open and there is something in the c_2] The safe contains [a list of things in the c_2].[end if][if c_2 is open and the c_2 contains nothing] The safe is empty! What a waste of a day![end if]\n\n There is [if d_0 is open]an open[otherwise]a closed[end if] passageway leading north. There is [if d_1 is open]an open[otherwise]a closed[end if] gateway leading west. You don't like doors? Why not try going south, that entranceway is unblocked.", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["r_10", {"id": "r_10", "type": "r", "name": "pantry", "noun": "pantry", "adj": null, "desc": "I am sorry to announce that you are now in the pantry.\n\n\n\n There is [if d_5 is open]an open[otherwise]a closed[end if] portal leading east. There is [if d_4 is open]an open[otherwise]a closed[end if] hatch leading west. There is an exit to the north. Don't worry, it is unguarded. You need an unguarded exit? You should try going south.", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["r_14", {"id": "r_14", "type": "r", "name": "washroom", "noun": "washroom", "adj": null, "desc": "I am sorry to announce that you are now in the washroom.\n\n\n\n There is [if d_4 is open]an open[otherwise]a closed[end if] hatch leading east. There is [if d_8 is open]an open[otherwise]a closed[end if] door leading north. You need an unguarded exit? You should try going south.", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["r_12", {"id": "r_12", "type": "r", "name": "chamber", "noun": "chamber", "adj": null, "desc": "You're now in the chamber. You decide to just list off a complete list of everything you see in the room, because hey, why not?\n\n You can see a dresser. You idly wonder how they came up with the name TextWorld for this place. It's pretty fitting.[if c_3 is open and there is something in the c_3] The dresser contains [a list of things in the c_3].[end if][if c_3 is open and the c_3 contains nothing] The dresser is empty, what a horrible day![end if]\n\nYou don't like doors? Why not try going west, that entranceway is unguarded.", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["r_9", {"id": "r_9", "type": "r", "name": "workshop", "noun": "workshop", "adj": null, "desc": "Look around you. Take it all in. It's not every day someone gets to be in a workshop. You begin looking for stuff.\n\n Oh wow! Is that what I think it is? It is! It's a locker.[if c_4 is open and there is something in the c_4] The locker contains [a list of things in the c_4].[end if][if c_4 is open and the c_4 contains nothing] Empty! What kind of nightmare TextWorld is this?[end if]\n\n There is [if d_3 is open]an open[otherwise]a closed[end if] balsam door leading north. There is an exit to the east. Don't worry, it is unblocked. You don't like doors? Why not try going west, that entranceway is unblocked.", "room_type": "work", "definite": null, "indefinite": null, "synonyms": null}], ["r_18", {"id": "r_18", "type": "r", "name": "bathroom", "noun": "bathroom", "adj": null, "desc": "You find yourself in a bathroom. An usual kind of place. The room seems oddly familiar, as though it were only superficially different from the other rooms in the building.\n\n You see a board. The board is usual.[if there is something on the s_2] On the board you make out [a list of things on the s_2]. Something scurries by right in the corner of your eye. Probably nothing.[end if][if there is nothing on the s_2] But the thing is empty.[end if]\n\n There is [if d_6 is open]an open[otherwise]a closed[end if] cedar gate leading west. You need an unguarded exit? You should try going north.", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["r_17", {"id": "r_17", "type": "r", "name": "vault", "noun": "vault", "adj": null, "desc": "I am sorry to announce that you are now in the vault. Okay, just remember what you're here to do, and everything will go great.\n\n You can see [if c_5 is locked]a locked[else if c_5 is open]an open[otherwise]a closed[end if] TextWorld box.[if c_5 is open and there is something in the c_5] The TextWorld box contains [a list of things in the c_5].[end if][if c_5 is open and the c_5 contains nothing] What a letdown! The TextWorld box is empty![end if] You can make out a rack. The rack is standard.[if there is something on the s_3] On the rack you can see [a list of things on the s_3].[end if][if there is nothing on the s_3] Looks like someone's already been here and taken everything off it, though. It would have been so cool if there was stuff on the rack.[end if]\n\n There is [if d_6 is open]an open[otherwise]a closed[end if] cedar gate leading east. There is [if d_7 is open]an open[otherwise]a closed[end if] gate leading south.", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["r_4", {"id": "r_4", "type": "r", "name": "sauna", "noun": "sauna", "adj": null, "desc": "You find yourself in a sauna. A typical kind of place. You try to gain information on your surroundings by using a technique you call 'looking.'\n\n Oh wow! Is that what I think it is? It is! It's a table. [if there is something on the s_4]On the table you can make out [a list of things on the s_4], so there's that.[end if][if there is nothing on the s_4]Unfortunately, there isn't a thing on it.[end if] You see a counter. [if there is something on the s_5]On the counter you make out [a list of things on the s_5].[end if][if there is nothing on the s_5]Looks like someone's already been here and taken everything off it, though.[end if]\n\n There is [if d_2 is open]an open[otherwise]a closed[end if] cedar portal leading south. There is an exit to the north. Don't worry, it is unblocked. There is an exit to the west. Don't worry, it is unblocked.", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["r_7", {"id": "r_7", "type": "r", "name": "bedchamber", "noun": "bedchamber", "adj": null, "desc": "You arrive in a bedchamber.\n\n\n\nThere is an unblocked exit to the east. You don't like doors? Why not try going north, that entranceway is unguarded.", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["r_5", {"id": "r_5", "type": "r", "name": "laundry place", "noun": "laundry place", "adj": null, "desc": "You've entered a laundry place.\n\n\n\nThere is an exit to the south. Don't worry, it is unblocked. There is an unblocked exit to the west.", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["r_6", {"id": "r_6", "type": "r", "name": "canteen", "noun": "canteen", "adj": null, "desc": "You arrive in a canteen. An ordinary kind of place.\n\n You can see a fridge.[if c_6 is open and there is something in the c_6] The fridge contains [a list of things in the c_6].[end if][if c_6 is open and the c_6 contains nothing] Empty! What kind of nightmare TextWorld is this?[end if]\n\nYou don't like doors? Why not try going east, that entranceway is unguarded. There is an exit to the south. Don't worry, it is unblocked.", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["r_13", {"id": "r_13", "type": "r", "name": "closet", "noun": "closet", "adj": null, "desc": "You're now in a closet. You decide to start listing off everything you see in the room, as if you were in a text adventure.\n\n You rest your hand against a wall, but you miss the wall and fall onto a shelf. The shelf is normal.[if there is something on the s_6] On the shelf you can see [a list of things on the s_6]. You can't wait to tell the folks at home about this![end if][if there is nothing on the s_6] But the thing is empty. What, you think everything in TextWorld should have stuff on it?[end if] Oh wow! Is that what I think it is? It is! It's a workbench. You wonder idly who left that here. The workbench is normal.[if there is something on the s_7] On the workbench you can see [a list of things on the s_7].[end if][if there is nothing on the s_7] The workbench appears to be empty. What, you think everything in TextWorld should have stuff on it?[end if]\n\nThere is an exit to the east. Don't worry, it is unblocked. You don't like doors? Why not try going north, that entranceway is unblocked.", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["r_11", {"id": "r_11", "type": "r", "name": "spare room", "noun": "spare room", "adj": null, "desc": "You're now in a spare room.\n\n You see a cuboid box.[if c_7 is open and there is something in the c_7] The cuboid box contains [a list of things in the c_7].[end if][if c_7 is open and the c_7 contains nothing] The cuboid box is empty! This is the worst thing that could possibly happen, ever![end if]\n\nThere is an exit to the south. Don't worry, it is unguarded.", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["r_15", {"id": "r_15", "type": "r", "name": "lounge", "noun": "lounge", "adj": null, "desc": "You find yourself in a lounge. An usual kind of place.\n\n\n\n There is [if d_8 is open]an open[otherwise]a closed[end if] door leading south. There is [if d_7 is open]an open[otherwise]a closed[end if] gate leading north.", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["r_16", {"id": "r_16", "type": "r", "name": "basement", "noun": "basement", "adj": null, "desc": "You have entered a basement. Not the basement you'd expect. No, this is a basement. The room seems oddly familiar, as though it were only superficially different from the other rooms in the building.\n\n You make out a stand. The stand is ordinary.[if there is something on the s_8] On the stand you can see [a list of things on the s_8]. There's something strange about this being here, but you can't put your finger on it.[end if][if there is nothing on the s_8] Looks like someone's already been here and taken everything off it, though. Aw, and here you were, all excited for there to be things on it![end if]\n\nThere is an exit to the north. Don't worry, it is unblocked.", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["r_19", {"id": "r_19", "type": "r", "name": "scullery", "noun": "scullery", "adj": null, "desc": "You've just shown up in a scullery. You decide to just list off a complete list of everything you see in the room, because hey, why not?\n\n\n\nYou don't like doors? Why not try going south, that entranceway is unblocked.", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["r_2", {"id": "r_2", "type": "r", "name": "study", "noun": "study", "adj": null, "desc": "You've entered a study. Let's see what's in here.\n\n You see a bookshelf. [if there is something on the s_9]You see [a list of things on the s_9] on the bookshelf.[end if][if there is nothing on the s_9]But there isn't a thing on it. Hm. Oh well[end if]\n\nThere is an unblocked exit to the north.", "room_type": "work", "definite": null, "indefinite": null, "synonyms": null}], ["r_3", {"id": "r_3", "type": "r", "name": "attic", "noun": "attic", "adj": null, "desc": "You are in an attic. A normal kind of place.\n\n\n\n There is [if d_2 is open]an open[otherwise]a closed[end if] cedar portal leading north. There is [if d_0 is open]an open[otherwise]a closed[end if] passageway leading south.", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["d_1", {"id": "d_1", "type": "d", "name": "gateway", "noun": "gateway", "adj": null, "desc": "The gateway looks hefty. [if open]It is open.[else if closed]It is closed.[otherwise]It is locked.[end if]", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["d_9", {"id": "d_9", "type": "d", "name": "lavender scented door", "noun": "lavender scented door", "adj": null, "desc": "it's a well-built lavender scented door [if open]You can see inside it.[else if closed]You can't see inside it because the lid's in your way.[otherwise]There is a lock on it.[end if]", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["d_0", {"id": "d_0", "type": "d", "name": "passageway", "noun": "passageway", "adj": null, "desc": "The passageway looks durable. [if open]You can see inside it.[else if closed]You can't see inside it because the lid's in your way.[otherwise]There is a lock on it.[end if]", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["d_4", {"id": "d_4", "type": "d", "name": "hatch", "noun": "hatch", "adj": null, "desc": "it's a sturdy hatch [if open]It is open.[else if closed]It is closed.[otherwise]It is locked.[end if]", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["d_5", {"id": "d_5", "type": "d", "name": "portal", "noun": "portal", "adj": null, "desc": "it is what it is, a portal [if open]You can see inside it.[else if closed]You can't see inside it because the lid's in your way.[otherwise]There is a lock on it.[end if]", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["d_8", {"id": "d_8", "type": "d", "name": "door", "noun": "door", "adj": null, "desc": "it is what it is, a door [if open]You can see inside it.[else if closed]You can't see inside it because the lid's in your way.[otherwise]There is a lock on it.[end if]", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["d_7", {"id": "d_7", "type": "d", "name": "gate", "noun": "gate", "adj": null, "desc": "it is what it is, a gate [if open]You can see inside it.[else if closed]You can't see inside it because the lid's in your way.[otherwise]There is a lock on it.[end if]", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["d_6", {"id": "d_6", "type": "d", "name": "cedar gate", "noun": "gate", "adj": "cedar", "desc": "it's a commanding gate [if open]It is open.[else if closed]It is closed.[otherwise]It is locked.[end if]", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["d_2", {"id": "d_2", "type": "d", "name": "cedar portal", "noun": "portal", "adj": "cedar", "desc": "The cedar portal looks imposing. [if open]It is open.[else if closed]It is closed.[otherwise]It is locked.[end if]", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["d_3", {"id": "d_3", "type": "d", "name": "balsam door", "noun": "door", "adj": "balsam", "desc": "The balsam door looks stuffy. [if open]You can see inside it.[else if closed]You can't see inside it because the lid's in your way.[otherwise]There is a lock on it.[end if]", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["c_0", {"id": "c_0", "type": "c", "name": "chest", "noun": "chest", "adj": null, "desc": "The chest looks strong, and impossible to bash open. [if open]You can see inside it.[else if closed]You can't see inside it because the lid's in your way.[otherwise]There is a lock on it.[end if]", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["c_1", {"id": "c_1", "type": "c", "name": "Canadian locker", "noun": "Canadian locker", "adj": null, "desc": "The Canadian locker looks strong, and impossible to open. [if open]You can see inside it.[else if closed]You can't see inside it because the lid's in your way.[otherwise]There is a lock on it.[end if]", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["c_2", {"id": "c_2", "type": "c", "name": "safe", "noun": "safe", "adj": null, "desc": "The safe looks strong, and impossible to crack open. [if open]It is open.[else if closed]It is closed.[otherwise]It is locked.[end if]", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["c_3", {"id": "c_3", "type": "c", "name": "dresser", "noun": "dresser", "adj": null, "desc": "The dresser looks strong, and impossible to break open. [if open]It is open.[else if closed]It is closed.[otherwise]It is locked.[end if]", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["c_4", {"id": "c_4", "type": "c", "name": "locker", "noun": "locker", "adj": null, "desc": "The locker looks strong, and impossible to open. [if open]It is open.[else if closed]It is closed.[otherwise]It is locked.[end if]", "room_type": "work", "definite": null, "indefinite": null, "synonyms": null}], ["c_5", {"id": "c_5", "type": "c", "name": "TextWorld box", "noun": "TextWorld box", "adj": null, "desc": "The TextWorld box looks strong, and impossible to force open. [if open]You can see inside it.[else if closed]You can't see inside it because the lid's in your way.[otherwise]There is a lock on it.[end if]", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["c_6", {"id": "c_6", "type": "c", "name": "fridge", "noun": "fridge", "adj": null, "desc": "The fridge looks strong, and impossible to open. [if open]You can see inside it.[else if closed]You can't see inside it because the lid's in your way.[otherwise]There is a lock on it.[end if]", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["c_7", {"id": "c_7", "type": "c", "name": "cuboid box", "noun": "cuboid box", "adj": null, "desc": "The cuboid box looks strong, and impossible to crack open. [if open]It is open.[else if closed]It is closed.[otherwise]It is locked.[end if]", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["f_0", {"id": "f_0", "type": "f", "name": "fondue", "noun": "fondue", "adj": null, "desc": "that's a standard fondue!", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["f_5", {"id": "f_5", "type": "f", "name": "burger", "noun": "burger", "adj": null, "desc": "You couldn't pay me to eat that typical thing.", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["f_6", {"id": "f_6", "type": "f", "name": "coconut", "noun": "coconut", "adj": null, "desc": "that's a normal coconut!", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["k_3", {"id": "k_3", "type": "k", "name": "keycard", "noun": "keycard", "adj": null, "desc": "The keycard is heavier than it looks.", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["k_8", {"id": "k_8", "type": "k", "name": "TextWorld passkey", "noun": "TextWorld passkey", "adj": null, "desc": "The metal of the TextWorld passkey is rusty.", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["k_9", {"id": "k_9", "type": "k", "name": "cuboid latchkey", "noun": "cuboid latchkey", "adj": null, "desc": "The cuboid latchkey is cold to the touch", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["o_1", {"id": "o_1", "type": "o", "name": "shirt", "noun": "shirt", "adj": null, "desc": "The shirt appears to be well matched to everything else here", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["o_2", {"id": "o_2", "type": "o", "name": "worm", "noun": "worm", "adj": null, "desc": "The worm appears well matched to everything else here", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["o_4", {"id": "o_4", "type": "o", "name": "mat", "noun": "mat", "adj": null, "desc": "The mat seems out of place here", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["s_0", {"id": "s_0", "type": "s", "name": "chair", "noun": "chair", "adj": null, "desc": "The chair is reliable.", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["s_1", {"id": "s_1", "type": "s", "name": "bowl", "noun": "bowl", "adj": null, "desc": "The bowl is balanced.", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["s_2", {"id": "s_2", "type": "s", "name": "board", "noun": "board", "adj": null, "desc": "The board is stable.", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["s_3", {"id": "s_3", "type": "s", "name": "rack", "noun": "rack", "adj": null, "desc": "The rack is reliable.", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["s_4", {"id": "s_4", "type": "s", "name": "table", "noun": "table", "adj": null, "desc": "The table is solidly built.", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["s_5", {"id": "s_5", "type": "s", "name": "counter", "noun": "counter", "adj": null, "desc": "The counter is undependable.", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["s_6", {"id": "s_6", "type": "s", "name": "shelf", "noun": "shelf", "adj": null, "desc": "The shelf is wobbly.", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["s_7", {"id": "s_7", "type": "s", "name": "workbench", "noun": "workbench", "adj": null, "desc": "The workbench is durable.", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["s_8", {"id": "s_8", "type": "s", "name": "stand", "noun": "stand", "adj": null, "desc": "The stand is solidly built.", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["s_9", {"id": "s_9", "type": "s", "name": "bookshelf", "noun": "bookshelf", "adj": null, "desc": "The bookshelf is wobbly.", "room_type": "work", "definite": null, "indefinite": null, "synonyms": null}], ["f_1", {"id": "f_1", "type": "f", "name": "stick of butter", "noun": "stick of butter", "adj": null, "desc": "that's an usual stick of butter!", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["f_2", {"id": "f_2", "type": "f", "name": "loaf of bread", "noun": "loaf of bread", "adj": null, "desc": "You couldn't pay me to eat that usual thing.", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["f_3", {"id": "f_3", "type": "f", "name": "sandwich", "noun": "sandwich", "adj": null, "desc": "that's a typical sandwich!", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["f_4", {"id": "f_4", "type": "f", "name": "licorice strip", "noun": "licorice strip", "adj": null, "desc": "that's a normal licorice strip!", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["k_0", {"id": "k_0", "type": "k", "name": "key", "noun": "key", "adj": null, "desc": "The key is heavier than it looks.", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["k_5", {"id": "k_5", "type": "k", "name": "latchkey", "noun": "latchkey", "adj": null, "desc": "The latchkey looks useful", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["o_0", {"id": "o_0", "type": "o", "name": "folder", "noun": "folder", "adj": null, "desc": "The folder is dirty.", "room_type": "work", "definite": null, "indefinite": null, "synonyms": null}], ["o_3", {"id": "o_3", "type": "o", "name": "Quote of the Day Calendar", "noun": "Quote of the Day Calendar", "adj": null, "desc": "The Quote of the Day Calendar is well-used.", "room_type": "work", "definite": null, "indefinite": null, "synonyms": null}], ["o_5", {"id": "o_5", "type": "o", "name": "laptop", "noun": "laptop", "adj": null, "desc": "The laptop is dirty.", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["o_6", {"id": "o_6", "type": "o", "name": "bug", "noun": "bug", "adj": null, "desc": "The bug is dirty.", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["o_7", {"id": "o_7", "type": "o", "name": "pillow", "noun": "pillow", "adj": null, "desc": "The pillow looks to fit in here", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["k_1", {"id": "k_1", "type": "k", "name": "lavender scented keycard", "noun": "lavender scented keycard", "adj": null, "desc": "The metal of the lavender scented keycard is brushed.", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["k_2", {"id": "k_2", "type": "k", "name": "Canadian passkey", "noun": "Canadian passkey", "adj": null, "desc": "The Canadian passkey is cold to the touch", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}]], "KB": {"logic": "# object\ntype o : t {\n    constraints {\n        obj1 :: in(o, I) & in(o, c) -> fail();\n        obj2 :: in(o, I) & on(o, s) -> fail();\n        obj3 :: in(o, I) & at(o, r) -> fail();\n        obj4 :: in(o, c) & on(o, s) -> fail();\n        obj5 :: in(o, c) & at(o, r) -> fail();\n        obj6 :: on(o, s) & at(o, r) -> fail();\n        obj7 :: at(o, r) & at(o, r') -> fail();\n        obj8 :: in(o, c) & in(o, c') -> fail();\n        obj9 :: on(o, s) & on(o, s') -> fail();\n    }\n\n    inform7 {\n        type {\n            kind :: \"object-like\";\n            definition :: \"object-like is portable.\";\n        }\n    }\n}\n\n# Inventory\ntype I {\n    predicates {\n        in(o, I);\n    }\n\n    rules {\n        inventory :: at(P, r) -> at(P, r);  # Nothing changes.\n\n        take :: $at(P, r) & at(o, r) -> in(o, I);\n        drop :: $at(P, r) & in(o, I) -> at(o, r);\n\n        take/c :: $at(P, r) & $at(c, r) & $open(c) & in(o, c) -> in(o, I);\n        insert :: $at(P, r) & $at(c, r) & $open(c) & in(o, I) -> in(o, c);\n\n        take/s :: $at(P, r) & $at(s, r) & on(o, s) -> in(o, I);\n        put    :: $at(P, r) & $at(s, r) & in(o, I) -> on(o, s);\n\n        examine/I :: in(o, I) -> in(o, I);  # Nothing changes.\n        examine/s :: at(P, r) & $at(s, r) & $on(o, s) -> at(P, r);  # Nothing changes.\n        examine/c :: at(P, r) & $at(c, r) & $open(c) & $in(o, c) -> at(P, r);  # Nothing changes.\n    }\n\n    reverse_rules {\n        take :: drop;\n        take/c :: insert;\n        take/s :: put;\n    }\n\n    inform7 {\n        predicates {\n            in(o, I) :: \"The player carries the {o}\";\n        }\n\n        commands {\n            take :: \"take {o}\" :: \"taking the {o}\";\n            drop :: \"drop {o}\" :: \"dropping the {o}\";\n\n            take/c :: \"take {o} from {c}\" :: \"removing the {o} from the {c}\";\n            insert :: \"insert {o} into {c}\" :: \"inserting the {o} into the {c}\";\n\n            take/s :: \"take {o} from {s}\" :: \"removing the {o} from the {s}\";\n            put :: \"put {o} on {s}\" :: \"putting the {o} on the {s}\";\n\n            inventory :: \"inventory\" :: \"taking inventory\";\n\n            examine/I :: \"examine {o}\" :: \"examining the {o}\";\n            examine/s :: \"examine {o}\" :: \"examining the {o}\";\n            examine/c :: \"examine {o}\" :: \"examining the {o}\";\n        }\n    }\n}\n\n# thing\ntype t {\n    rules {\n        examine/t :: at(P, r) & $at(t, r) -> at(P, r);\n    }\n\n    inform7 {\n        type {\n            kind :: \"thing\";\n        }\n\n        commands {\n            examine/t :: \"examine {t}\" :: \"examining the {t}\";\n        }\n    }\n}\n\n# door\ntype d : t {\n    predicates {\n        open(d);\n        closed(d);\n        locked(d);\n\n        link(r, d, r);\n    }\n\n    rules {\n        lock/d   :: $at(P, r) & $link(r, d, r') & $link(r', d, r) & $in(k, I) & $match(k, d) & closed(d) -> locked(d);\n        unlock/d :: $at(P, r) & $link(r, d, r') & $link(r', d, r) & $in(k, I) & $match(k, d) & locked(d) -> closed(d);\n\n        open/d   :: $at(P, r) & $link(r, d, r') & $link(r', d, r) & closed(d) -> open(d) & free(r, r') & free(r', r);\n        close/d  :: $at(P, r) & $link(r, d, r') & $link(r', d, r) & open(d) & free(r, r') & free(r', r) -> closed(d);\n\n        examine/d :: at(P, r) & $link(r, d, r') -> at(P, r);  # Nothing changes.\n    }\n\n    reverse_rules {\n        lock/d :: unlock/d;\n        open/d :: close/d;\n    }\n\n    constraints {\n        d1 :: open(d)   & closed(d) -> fail();\n        d2 :: open(d)   & locked(d) -> fail();\n        d3 :: closed(d) & locked(d) -> fail();\n\n        # A door can't be used to link more than two rooms.\n        link1 :: link(r, d, r') & link(r, d, r'') -> fail();\n        link2 :: link(r, d, r') & link(r'', d, r''') -> fail();\n\n        # There's already a door linking two rooms.\n        link3 :: link(r, d, r') & link(r, d', r') -> fail();\n\n        # There cannot be more than four doors in a room.\n        too_many_doors :: link(r, d1: d, r1: r) & link(r, d2: d, r2: r) & link(r, d3: d, r3: r) & link(r, d4: d, r4: r) & link(r, d5: d, r5: r) -> fail();\n\n        # There cannot be more than four doors in a room.\n        dr1 :: free(r, r1: r) & link(r, d2: d, r2: r) & link(r, d3: d, r3: r) & link(r, d4: d, r4: r) & link(r, d5: d, r5: r) -> fail();\n        dr2 :: free(r, r1: r) & free(r, r2: r) & link(r, d3: d, r3: r) & link(r, d4: d, r4: r) & link(r, d5: d, r5: r) -> fail();\n        dr3 :: free(r, r1: r) & free(r, r2: r) & free(r, r3: r) & link(r, d4: d, r4: r) & link(r, d5: d, r5: r) -> fail();\n        dr4 :: free(r, r1: r) & free(r, r2: r) & free(r, r3: r) & free(r, r4: r) & link(r, d5: d, r5: r) -> fail();\n\n        free1 :: link(r, d, r') & free(r, r') & closed(d) -> fail();\n        free2 :: link(r, d, r') & free(r, r') & locked(d) -> fail();\n    }\n\n    inform7 {\n        type {\n            kind :: \"door\";\n            definition :: \"door is openable and lockable.\";\n        }\n\n        predicates {\n            open(d) :: \"The {d} is open\";\n            closed(d) :: \"The {d} is closed\";\n            locked(d) :: \"The {d} is locked\";\n            link(r, d, r') :: \"\";  # No equivalent in Inform7.\n        }\n\n        commands {\n            open/d :: \"open {d}\" :: \"opening {d}\";\n            close/d :: \"close {d}\" :: \"closing {d}\";\n\n            unlock/d :: \"unlock {d} with {k}\" :: \"unlocking {d} with the {k}\";\n            lock/d :: \"lock {d} with {k}\" :: \"locking {d} with the {k}\";\n\n            examine/d :: \"examine {d}\" :: \"examining {d}\";\n        }\n    }\n}\n\n# container\ntype c : t {\n    predicates {\n        open(c);\n        closed(c);\n        locked(c);\n\n        in(o, c);\n    }\n\n    rules {\n        lock/c   :: $at(P, r) & $at(c, r) & $in(k, I) & $match(k, c) & closed(c) -> locked(c);\n        unlock/c :: $at(P, r) & $at(c, r) & $in(k, I) & $match(k, c) & locked(c) -> closed(c);\n\n        open/c  :: $at(P, r) & $at(c, r) & closed(c) -> open(c);\n        close/c :: $at(P, r) & $at(c, r) & open(c) -> closed(c);\n    }\n\n    reverse_rules {\n        lock/c :: unlock/c;\n        open/c :: close/c;\n    }\n\n    constraints {\n        c1 :: open(c)   & closed(c) -> fail();\n        c2 :: open(c)   & locked(c) -> fail();\n        c3 :: closed(c) & locked(c) -> fail();\n    }\n\n    inform7 {\n        type {\n            kind :: \"container\";\n            definition :: \"containers are openable, lockable and fixed in place. containers are usually closed.\";\n        }\n\n        predicates {\n            open(c) :: \"The {c} is open\";\n            closed(c) :: \"The {c} is closed\";\n            locked(c) :: \"The {c} is locked\";\n\n            in(o, c) :: \"The {o} is in the {c}\";\n        }\n\n        commands {\n            open/c :: \"open {c}\" :: \"opening the {c}\";\n            close/c :: \"close {c}\" :: \"closing the {c}\";\n\n            lock/c :: \"lock {c} with {k}\" :: \"locking the {c} with the {k}\";\n            unlock/c :: \"unlock {c} with {k}\" :: \"unlocking the {c} with the {k}\";\n        }\n    }\n}\n\n# key\ntype k : o {\n    predicates {\n        match(k, c);\n        match(k, d);\n    }\n\n    constraints {\n        k1 :: match(k, c) & match(k', c) -> fail();\n        k2 :: match(k, c) & match(k, c') -> fail();\n        k3 :: match(k, d) & match(k', d) -> fail();\n        k4 :: match(k, d) & match(k, d') -> fail();\n    }\n\n    inform7 {\n        type {\n            kind :: \"key\";\n        }\n\n        predicates {\n            match(k, c) :: \"The matching key of the {c} is the {k}\";\n            match(k, d) :: \"The matching key of the {d} is the {k}\";\n        }\n    }\n}\n\n# food\ntype f : o {\n    predicates {\n        edible(f);\n        eaten(f);\n    }\n\n    rules {\n        eat :: in(f, I) -> eaten(f);\n    }\n\n    constraints {\n        eaten1 :: eaten(f) & in(f, I) -> fail();\n        eaten2 :: eaten(f) & in(f, c) -> fail();\n        eaten3 :: eaten(f) & on(f, s) -> fail();\n        eaten4 :: eaten(f) & at(f, r) -> fail();\n    }\n\n    inform7 {\n        type {\n            kind :: \"food\";\n            definition :: \"food is edible.\";\n        }\n\n        predicates {\n            edible(f) :: \"The {f} is edible\";\n            eaten(f) :: \"The {f} is nowhere\";\n        }\n\n        commands {\n            eat :: \"eat {f}\" :: \"eating the {f}\";\n        }\n    }\n}\n\n# Player\ntype P {\n    rules {\n        look :: at(P, r) -> at(P, r);  # Nothing changes.\n    }\n\n    inform7 {\n        commands {\n            look :: \"look\" :: \"looking\";\n        }\n    }\n}\n\n# supporter\ntype s : t {\n    predicates {\n        on(o, s);\n    }\n\n    inform7 {\n        type {\n            kind :: \"supporter\";\n            definition :: \"supporters are fixed in place.\";\n        }\n\n        predicates {\n            on(o, s) :: \"The {o} is on the {s}\";\n        }\n    }\n}\n\n# room\ntype r {\n    predicates {\n        at(P, r);\n        at(t, r);\n\n        north_of(r, r);\n        west_of(r, r);\n\n        north_of/d(r, d, r);\n        west_of/d(r, d, r);\n\n        free(r, r);\n\n        south_of(r, r') = north_of(r', r);\n        east_of(r, r') = west_of(r', r);\n\n        south_of/d(r, d, r') = north_of/d(r', d, r);\n        east_of/d(r, d, r') = west_of/d(r', d, r);\n    }\n\n    rules {\n        go/north :: at(P, r) & $north_of(r', r) & $free(r, r') & $free(r', r) -> at(P, r');\n        go/south :: at(P, r) & $south_of(r', r) & $free(r, r') & $free(r', r) -> at(P, r');\n        go/east  :: at(P, r) & $east_of(r', r) & $free(r, r') & $free(r', r) -> at(P, r');\n        go/west  :: at(P, r) & $west_of(r', r) & $free(r, r') & $free(r', r) -> at(P, r');\n    }\n\n    reverse_rules {\n        go/north :: go/south;\n        go/west :: go/east;\n    }\n\n    constraints {\n        r1 :: at(P, r) & at(P, r') -> fail();\n        r2 :: at(s, r) & at(s, r') -> fail();\n        r3 :: at(c, r) & at(c, r') -> fail();\n\n        # An exit direction can only lead to one room.\n        nav_rr1 :: north_of(r, r') & north_of(r'', r') -> fail();\n        nav_rr2 :: south_of(r, r') & south_of(r'', r') -> fail();\n        nav_rr3 :: east_of(r, r') & east_of(r'', r') -> fail();\n        nav_rr4 :: west_of(r, r') & west_of(r'', r') -> fail();\n\n        # Two rooms can only be connected once with each other.\n        nav_rrA :: north_of(r, r') & south_of(r, r') -> fail();\n        nav_rrB :: north_of(r, r') & west_of(r, r') -> fail();\n        nav_rrC :: north_of(r, r') & east_of(r, r') -> fail();\n        nav_rrD :: south_of(r, r') & west_of(r, r') -> fail();\n        nav_rrE :: south_of(r, r') & east_of(r, r') -> fail();\n        nav_rrF :: west_of(r, r')  & east_of(r, r') -> fail();\n    }\n\n    inform7 {\n        type {\n            kind :: \"room\";\n        }\n\n        predicates {\n            at(P, r) :: \"The player is in {r}\";\n            at(t, r) :: \"The {t} is in {r}\";\n            free(r, r') :: \"\";  # No equivalent in Inform7.\n\n            north_of(r, r') :: \"The {r} is mapped north of {r'}\";\n            south_of(r, r') :: \"The {r} is mapped south of {r'}\";\n            east_of(r, r') :: \"The {r} is mapped east of {r'}\";\n            west_of(r, r') :: \"The {r} is mapped west of {r'}\";\n\n            north_of/d(r, d, r') :: \"South of {r} and north of {r'} is a door called {d}\";\n            south_of/d(r, d, r') :: \"North of {r} and south of {r'} is a door called {d}\";\n            east_of/d(r, d, r') :: \"West of {r} and east of {r'} is a door called {d}\";\n            west_of/d(r, d, r') :: \"East of {r} and west of {r'} is a door called {d}\";\n        }\n\n        commands {\n            go/north :: \"go north\" :: \"going north\";\n            go/south :: \"go south\" :: \"going south\";\n            go/east :: \"go east\" :: \"going east\";\n            go/west :: \"go west\" :: \"going west\";\n        }\n    }\n}\n\n", "text_grammars_path": "/root/miniconda3/envs/kgdqn/lib/python3.6/site-packages/textworld/generator/data/text_grammars"}, "metadata": {"uuid": "tw-mlhnSDF0cDcOFZc8Fy-house-GP-p7Xoil6VsdqQH9er"}, "objective": "It's time to explore the amazing world of TextWorld! Here is your task for today. First off, if it's not too much trouble, I need you to pick up the Canadian passkey from the bowl within the cookery. Then, unlock the Canadian locker with the Canadian passkey. After that, open the Canadian locker. After that, pick up the key from the Canadian locker in the cookery. And then, take the lavender scented keycard from the chair in the cookery. If you can get your hands on the lavender scented keycard, doublecheck that the lavender scented door in the cookery is unlocked. Then, ensure that the lavender scented door is open. And then, go east. That done, make sure that the chest is open. And then, you can insert the key inside the chest within the garage. Once that's all handled, you can stop!", "extras": {}, "main_quest": {"desc": "It's time to explore the amazing world of TextWorld! Here is your task for today. First off, if it's not too much trouble, I need you to pick up the Canadian passkey from the bowl within the cookery. Then, unlock the Canadian locker with the Canadian passkey. After that, open the Canadian locker. After that, pick up the key from the Canadian locker in the cookery. And then, take the lavender scented keycard from the chair in the cookery. If you can get your hands on the lavender scented keycard, doublecheck that the lavender scented door in the cookery is unlocked. Then, ensure that the lavender scented door is open. And then, go east. That done, make sure that the chest is open. And then, you can insert the key inside the chest within the garage. Once that's all handled, you can stop!", "reward": 1, "commands": ["take Canadian passkey from bowl", "unlock Canadian locker with Canadian passkey", "open Canadian locker", "take key from Canadian locker", "take lavender scented keycard from chair", "unlock lavender scented door with lavender scented keycard", "open lavender scented door", "go east", "open chest", "insert key into chest"], "win_events": [{"commands": [], "actions": [{"name": "take/s-P-r-s-k-I", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_1", "type": "s"}, {"name": "r_8", "type": "r"}]}, {"name": "on", "arguments": [{"name": "k_2", "type": "k"}, {"name": "s_1", "type": "s"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_1", "type": "s"}, {"name": "r_8", "type": "r"}]}, {"name": "in", "arguments": [{"name": "k_2", "type": "k"}, {"name": "I", "type": "I"}]}]}, {"name": "unlock/c", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_1", "type": "c"}, {"name": "r_8", "type": "r"}]}, {"name": "in", "arguments": [{"name": "k_2", "type": "k"}, {"name": "I", "type": "I"}]}, {"name": "match", "arguments": [{"name": "k_2", "type": "k"}, {"name": "c_1", "type": "c"}]}, {"name": "locked", "arguments": [{"name": "c_1", "type": "c"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_1", "type": "c"}, {"name": "r_8", "type": "r"}]}, {"name": "in", "arguments": [{"name": "k_2", "type": "k"}, {"name": "I", "type": "I"}]}, {"name": "match", "arguments": [{"name": "k_2", "type": "k"}, {"name": "c_1", "type": "c"}]}, {"name": "closed", "arguments": [{"name": "c_1", "type": "c"}]}]}, {"name": "open/c", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_1", "type": "c"}, {"name": "r_8", "type": "r"}]}, {"name": "closed", "arguments": [{"name": "c_1", "type": "c"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_1", "type": "c"}, {"name": "r_8", "type": "r"}]}, {"name": "open", "arguments": [{"name": "c_1", "type": "c"}]}]}, {"name": "take/c-P-r-c-k-I", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_1", "type": "c"}, {"name": "r_8", "type": "r"}]}, {"name": "open", "arguments": [{"name": "c_1", "type": "c"}]}, {"name": "in", "arguments": [{"name": "k_0", "type": "k"}, {"name": "c_1", "type": "c"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_1", "type": "c"}, {"name": "r_8", "type": "r"}]}, {"name": "open", "arguments": [{"name": "c_1", "type": "c"}]}, {"name": "in", "arguments": [{"name": "k_0", "type": "k"}, {"name": "I", "type": "I"}]}]}, {"name": "take/s-P-r-s-k-I", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_0", "type": "s"}, {"name": "r_8", "type": "r"}]}, {"name": "on", "arguments": [{"name": "k_1", "type": "k"}, {"name": "s_0", "type": "s"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_0", "type": "s"}, {"name": "r_8", "type": "r"}]}, {"name": "in", "arguments": [{"name": "k_1", "type": "k"}, {"name": "I", "type": "I"}]}]}, {"name": "unlock/d", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_8", "type": "r"}, {"name": "d_9", "type": "d"}, {"name": "r_0", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_0", "type": "r"}, {"name": "d_9", "type": "d"}, {"name": "r_8", "type": "r"}]}, {"name": "in", "arguments": [{"name": "k_1", "type": "k"}, {"name": "I", "type": "I"}]}, {"name": "match", "arguments": [{"name": "k_1", "type": "k"}, {"name": "d_9", "type": "d"}]}, {"name": "locked", "arguments": [{"name": "d_9", "type": "d"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_8", "type": "r"}, {"name": "d_9", "type": "d"}, {"name": "r_0", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_0", "type": "r"}, {"name": "d_9", "type": "d"}, {"name": "r_8", "type": "r"}]}, {"name": "in", "arguments": [{"name": "k_1", "type": "k"}, {"name": "I", "type": "I"}]}, {"name": "match", "arguments": [{"name": "k_1", "type": "k"}, {"name": "d_9", "type": "d"}]}, {"name": "closed", "arguments": [{"name": "d_9", "type": "d"}]}]}, {"name": "open/d", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_8", "type": "r"}, {"name": "d_9", "type": "d"}, {"name": "r_0", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_0", "type": "r"}, {"name": "d_9", "type": "d"}, {"name": "r_8", "type": "r"}]}, {"name": "closed", "arguments": [{"name": "d_9", "type": "d"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_8", "type": "r"}, {"name": "d_9", "type": "d"}, {"name": "r_0", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_0", "type": "r"}, {"name": "d_9", "type": "d"}, {"name": "r_8", "type": "r"}]}, {"name": "open", "arguments": [{"name": "d_9", "type": "d"}]}, {"name": "free", "arguments": [{"name": "r_8", "type": "r"}, {"name": "r_0", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_0", "type": "r"}, {"name": "r_8", "type": "r"}]}]}, {"name": "go/east", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "west_of", "arguments": [{"name": "r_8", "type": "r"}, {"name": "r_0", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_8", "type": "r"}, {"name": "r_0", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_0", "type": "r"}, {"name": "r_8", "type": "r"}]}], "postconditions": [{"name": "west_of", "arguments": [{"name": "r_8", "type": "r"}, {"name": "r_0", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_8", "type": "r"}, {"name": "r_0", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_0", "type": "r"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_0", "type": "r"}]}]}, {"name": "open/c", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_0", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_0", "type": "c"}, {"name": "r_0", "type": "r"}]}, {"name": "closed", "arguments": [{"name": "c_0", "type": "c"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_0", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_0", "type": "c"}, {"name": "r_0", "type": "r"}]}, {"name": "open", "arguments": [{"name": "c_0", "type": "c"}]}]}, {"name": "insert-P-r-c-k-I", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_0", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_0", "type": "c"}, {"name": "r_0", "type": "r"}]}, {"name": "open", "arguments": [{"name": "c_0", "type": "c"}]}, {"name": "in", "arguments": [{"name": "k_0", "type": "k"}, {"name": "I", "type": "I"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_0", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_0", "type": "c"}, {"name": "r_0", "type": "r"}]}, {"name": "open", "arguments": [{"name": "c_0", "type": "c"}]}, {"name": "in", "arguments": [{"name": "k_0", "type": "k"}, {"name": "c_0", "type": "c"}]}]}], "condition": {"name": "trigger", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_0", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_0", "type": "c"}, {"name": "r_0", "type": "r"}]}, {"name": "open", "arguments": [{"name": "c_0", "type": "c"}]}, {"name": "in", "arguments": [{"name": "k_0", "type": "k"}, {"name": "c_0", "type": "c"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_0", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_0", "type": "c"}, {"name": "r_0", "type": "r"}]}, {"name": "open", "arguments": [{"name": "c_0", "type": "c"}]}, {"name": "in", "arguments": [{"name": "k_0", "type": "k"}, {"name": "c_0", "type": "c"}]}, {"name": "event", "arguments": [{"name": "P", "type": "P"}, {"name": "c_0", "type": "c"}, {"name": "k_0", "type": "k"}, {"name": "r_0", "type": "r"}]}]}}], "fail_events": []}}